<?xml version="1.0" encoding="windows-1252"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC0822 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3261 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3261.xml">
<!ENTITY RFC3311 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3261.xml">
<!ENTITY RFC4028 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4028.xml">
]>
<?rfc toc="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="yes" ?>
<?rfc sortrefs="no" ?>
<?rfc strict="yes" ?>
<rfc ipr="trust200902" category="std" docName="draft-holmberg-sipcore-sip-push-latest" obsoletes="" updates="4028" submissionType="IETF" xml:lang="en">
  <front>
    <title abbrev="Session timer glare">
      Push Notification with the Session Initiation Protocol (SIP)
    </title>
      <author initials="C.H." surname="Holmberg" fullname="Christer Holmberg">
      <organization>Ericsson</organization>
      <address>
        <postal>
          <street>Hirsalantie 11</street>
          <code>02420</code>
          <city>Jorvas</city>
          <country>Finland</country>
        </postal>
        <email>christer.holmberg@ericsson.com</email>
      </address>
    </author>
  
    <date year="2017"/>
    <area>Transport</area>
    <workgroup>SIPCORE Working Group</workgroup>
    <keyword>SIP</keyword>
    <keyword>Push</keyword>
    <keyword>Notification</keyword>
    <abstract>
      <t>
        This document describes how push notification mechanisms can be used to wake up
        idle Session Initiation Protocol (SIP) applications, in order to be able to receive 
        and process SIP requests. The document defines new SIP URI parameters, that can be 
        used in a SIP REGISTER request to provide push notification information from the 
        SIP User Agent (UA) to the SIP entity (realized as a SIP proxy in this document) 
        that will send a push request to the push server in order to trigger a push notification 
        towards the SIP UA.
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction" toc="default">
      <t>
        In order to save resources (e.g, battery life) some devices and operating
        systems require idle applications to be woken up using a push notification
        service. Typically each operating system uses a dedicated push notification
        service. For example, Apple iOS devices use the Apple Push Notification Service (APNS).
      </t>
      <t>
        Due to the restriction above, applications can not be woken up by non-push notification
        traffic. This means that an idle Session Initiation Protocol (SIP) <xref target="RFC3261"/> 
        User Agent (UA) will not be able to receive an incoming SIP request, e.g., an SIP INVITE request 
        initiating a new SIP session.
      </t>
      <t>
        This document describes how push notification mechanisms can be used to wake up
        idle SIP applications, in order to be able to receive and process SIP requests.
        The document defines new SIP URI parameters, that can be used in a SIP REGISTER
        request to provide push notification information from the SIP UA to the SIP entity
        (realized as a SIP proxy in this document) that will send a push request to the 
        push server in order to trigger a push notification towards the SIP UA.
      </t> 
      <t>
        When a SIP UA registers to a push service, it will receive a unique Push Resource ID (PRID)
        associated to that registration. The SIP UA will provide the PRID to the SIP network in
        a SIP REGISTER request. A SIP proxy (e.g., the SIP registrar) will store a mapping between
        the registered contact and the PRID.
      </t>
      <t>
        When the SIP entity receives a SIP request for a new session, or a stand-alone SIP request,
        addressed towards a SIP UA, the SIP entity will send a push request to the push
        service used by the SIP UA, using the push resource ID associated with the registered
        contact of the SIP UA, in order to trigger a push notification towards the SIP UA. The
        SIP entity will then forward the SIP request towards the SIP UA using normal SIP routing
        procedures. Once the SIP UA receives the push notification, it will be able to receive
        and process the SIP request.
      </t>
      <t>
        Different push notification mechanisms exist today. Some are based on there
        standardized mechanism defined in <xref target="RFC8030"/>, while others are
        proprietary (e.g., the Apple Push Notification Service). <xref target="fig-sip-pn-arch"/>
        shows the generic push notification architecture supported by the mechanism
        in this document.
      </t>
      <figure title="SIP Push Notification Architecture" anchor="fig-sip-pn-arch"
align="center"><artwork>
<![CDATA[

    +--------+           +--------------+       +-----------------+
    | SIP UA |           | Push Service |       |    SIP Proxy    |
    +--------+           +--------------+       +-----------------+
        |                      |                         |
        |      Subscribe       |                         |
        |--------------------->|                         |
        |                      |                         |
        |    Push Resource ID  |                         |
        |<---------------------|                         |
        |                      |                         |        
        |          SIP REGISTER (Push Resource ID)       |
        |===============================================>|
        |                      |                         |
        |                      |     Push Message        |
        |    Push Message      |<------------------------|
        |<---------------------|                         |
        |                      |                         |

        ------- Push Notification API

        ======= SIP 

    REGISTER sip:alice@example.com SIP/2.0
    Via: SIP/2.0/TCP alicemobile.example.com:5060;branch=z9hG4bKnashds7
    Max-Forwards: 70
    To: Alice <sip:alice@example.com>
    From: Alice <sip:alice@example.com>;tag=456248
    Call-ID: 843817637684230@998sdasdh09
    CSeq: 1826 REGISTER
    Contact: <sip:alice@alicemobile.example.com;
      pn-type=acme;
      pn-token="ZTY4ZDJlMzODE1NmUgKi0K">
    Expires: 7200
    Content-Length: 0

]]></artwork></figure>
    </section>
 
    <section title="Conventions">
      <t>
        The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref target="RFC2119"></xref>.
      </t>
    </section>

    <section title="Push Resource ID (PRID)">
      <t>
        When an entity registers with a Push Notification Server (PNS) is receives
        a unique Push Resource ID (PRID), which is a value associated with the 
        registration. 
      </t>
      <t>  
        The format of the PRID may vary depending on the PNS provider. The PRID 
        may be part of a URI that can be used to retrieve the address and port of
        the PNS when sending push requests to the PNS. The PRID may also be a token
        value, in which case the address and port of the PNS needs to be provided 
        using other means.
      </t>
      <t>
        The details regarding discovery of the PNS, and the procedures for the 
        push notification registration and maintenance are outside the scope of 
        this document. The information needed to contact the PNS is typically 
        pre-configured in the operating system (OS) of the device.
      </t>
    </section>

    <section anchor="section.ua" title="SIP User Agent (UA) Behavior">
      <t>
        Once the SIP UA has registered with the PNS received the PRID, when then 
        UA wants to receive push notifications triggered by the SIP proxy, the UA MUST 
        send a SIP REGISTER using normal SIP registration procedures. The UA MUST add 
        a pn-token URI parameter, and MAY add a pn-type URI parameter, to the SIP Contact 
        header field URI of the request.
      </t>
      <t>
        As long as the UA wants the SIP proxy to continue sending push requests, the 
        UA MUST include the pn-token Contact header field URI parameter in every re-registration 
        SIP REGISTER request sent towards the SIP proxy.
      </t>
      <t>
        If the UA at some point wants to stop the SIP proxy from sending push requests, 
        the UA MUST send a SIP REGISTER request without the pn-token Contact header field
        URI parameter.
      </t>
      <t>
        If the UA expects to receive payload in the push notification, the UA MAY 
        add a pn-enckey and a pn-encsec Contact header field URI parameter, in order to allow 
        encryption of the data using the mechanism in <xref target="I-D.ietf-webpush-encryption"/>.
        The pn-enckey URI parameter contains the public key, and the pn-encsec URI parameter 
        contains the authentication secret <xref target="I-D.ietf-webpush-encryption"/>.
      </t>
      <t>
        Whenever the UA receives a push notification request, it MUST assume that it is about
        to receive a SIP request.
      </t>
    </section>

    <section anchor="section.proxy" title="SIP Proxy Behavior">
      <t>
        When the SIP proxy receives a SIP request for a new dialog (e.g., a SIP INVITE request)
        or a non-dialog SIP request (e.g., a SIP MESSAGE request) aimed for a SIP UA, if the
        Request-URI of the request contains a pn-token URI parameter, the SIP proxy triggers a 
        push request towards the push notification server associated with the PRID. After that, 
        the SIP proxy forwards the SIP request towards the SIP UA using normal SIP procedures.
      </t>
      <t>
        The SIP proxy MUST NOT transport the SIP request as push request payload, instead of
        forwarding the request using normal SIP procedures.
      </t>
      <t>
        In some cases the push notification provider can be retrieved from the pn-token URI
        parameter. In other cases the pn-type URI parameter is used to identity the push
        notification provider.
      </t>
      <t>
        If the proxy is not able to contact the push notification provider, or even determine
        which push notification provider to contact, it SHOULD reject the SIP request.
      </t>
      <t>
        The protocol and format used for the push request depends on the push notification provider,
        and the details for constructing and sending the messages are outside the scope of this
        specification.
      </t>
    </section>

    <section anchor="section.nat" title="Network Address Translator (NAT) Considerations">
      <t>
        Whenever the UA receives a push notification, if the SIP UA is located behind a
        Network Address Translator (NAT), the UA might need to take actions in order to 
        establish a binding in the NAT, in order for an incoming SIP request to reach the 
        UA. <xref target="RFC5626"/> and <xref target="RFC6223"/> define such mechanisms. 
        This document does not require usage of a specific mechanism.
      </t>
    </section>

    <section anchor="section.sec-apns" title="pn-type URI parameter for Apple Push Notification Service">
      <t>
        When the Apple Push Notification Service (APNS) is used, the value of the pn-type URI parameter
        pns-provider parameter part is "APNS". The pns-provider part contains the APNS App ID, which contains
        of two parts, separated by a period (.): Team ID and Bundle ID. The Team ID is provided by Apple and 
        is unique to a development team. The Bundle ID is unique to a development team, and is a string that will
        can match a single application or a group of applications.
      </t>
      <t>
        Example: pn-type = APNS:DEF123GHIJ.com.yourcompany.yourexampleapp
      </t>
      <t>
        For more information on the APNS App ID:
      </t>
      <t>
        https://developer.apple.com/library/content/documentation/General/Conceptual/DevPedia-CocoaCore/AppID.html
      </t>
    </section>

    <section anchor="section.sec" title="Security considerations">
      <t>
        In addition to the information exchanged between a device and its
        PNS in order to esatblish a push notification subscription, the mechanism 
        in this document does not require entities to provide any additional
        information to the PNS.
      </t>
      <t>
        Push notification mechanisms provide different methods to ensure that malicious 
        user cannot trigger push notifications to a device. Users of the mechanism 
        in this document MUST take measures to prevent push notifications from being
        sent to a device from a malicious user.
      </t>
      <t>
        In case entities do want to include payload in the push notifications, this document 
        defines the means for using end-to-end payload encryption between the entity sending
        the push request and the entity receiving the associated push notification.
      </t>
    </section>
    <section anchor="section.iana" title="IANA considerations">
      <t>
        This specification defines new SIP URI parameters that extend the
        registry created by <xref target="RFC3969"/>:
      </t>
      <section anchor="section.iana.pn-token" title="pn-token">
        <figure align="center"><artwork>
<![CDATA[

  Parameter Name: pn-token

  Predefined Values:  No

  Reference:  RFC XXXX

]]></artwork></figure>
      </section>
      <section anchor="section.iana.pn-type" title="pn-type">
        <figure align="center"><artwork>
<![CDATA[

  Parameter Name: pn-type

  Predefined Values:  No

  Reference:  RFC XXXX

]]></artwork></figure>
      </section>
      <section anchor="section.iana.pn-enckey" title="pn-enckey">
        <figure align="center"><artwork>
<![CDATA[

  Parameter Name: pn-enckey

  Predefined Values:  No

  Reference:  RFC XXXX

]]></artwork></figure>
      </section>
      <section anchor="section.iana.pn-encsec" title="pn-enccode">
        <figure align="center"><artwork>
<![CDATA[

  Parameter Name: pn-enccode

  Predefined Values:  No

  Reference:  RFC XXXX

]]></artwork></figure>
      </section>

      <section anchor="section.iana.pns-sub" title="PNS Sub-registry Establishment">
        <t>
             This section creates a new sub-registry, "PNS", under the sip-parameters
             registry: http://www.iana.org/assignments/sip-parameters.
        </t>
        <t>
            The purpose of the sub-registry is to register SIP URI pn-type values.
        </t>
        <figure align="center"><artwork>
<![CDATA[

   This sub-registry is defined as a table that contains the following
   three columns:

   Value:        The token under registration

   Description:  The name of the push notification service

   Document:     A reference to the document defining the registration

]]></artwork></figure>

        <figure align="center"><artwork>
<![CDATA[

  This specification registers the following value:

  Value         Description                         Document
  -------       ----------------------------------  ----------

  APNS          Apple Push Notification Service     [RFC XXXX]
                 

]]></artwork></figure>
      </section>
    </section>
  </middle>
  <back>
    <references title="Normative references">
      <?rfc include="reference.RFC.2119"?>
      <?rfc include="reference.RFC.3261"?>
      <?rfc include="reference.RFC.3969"?>
      <?rfc include="reference.RFC.8030"?>
    </references>
    <references title="Informative references">
      <?rfc include="reference.RFC.5626"?>
      <?rfc include="reference.RFC.6223"?>
      <?rfc include="reference.I-D.ietf-webpush-encryption"?>
    </references>
  </back>
</rfc>
