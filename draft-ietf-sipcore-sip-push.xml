<?xml version="1.0" encoding="windows-1252"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC0822 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3261 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3261.xml">
<!ENTITY RFC3311 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3261.xml">
<!ENTITY RFC4028 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4028.xml">
]>
<?rfc toc="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="yes" ?>
<?rfc sortrefs="no" ?>
<?rfc strict="yes" ?>
<rfc ipr="trust200902" category="std" docName="draft-ietf-sipcore-sip-push-latest" obsoletes="" updates="" submissionType="IETF" xml:lang="en">
  <front>
    <title abbrev="SIP PUSH">
      Push Notification with the Session Initiation Protocol (SIP)
    </title>
      <author initials="C.H." surname="Holmberg" fullname="Christer Holmberg">
      <organization>Ericsson</organization>
      <address>
        <postal>
          <street>Hirsalantie 11</street>
          <code>02420</code>
          <city>Jorvas</city>
          <country>Finland</country>
        </postal>
        <email>christer.holmberg@ericsson.com</email>
      </address>
    </author>
  
    <date year="2017"/>
    <area>Transport</area>
    <workgroup>SIPCORE Working Group</workgroup>
    <keyword>SIP</keyword>
    <keyword>Push</keyword>
    <keyword>Notification</keyword>
    <abstract>
      <t>
        This document describes how push notification mechanisms can be used to wake up
        suspended Session Initiation Protocol (SIP) User Agents (UAs), in order to be able to receive 
        and generate SIP requests. The document defines new SIP URI parameters, that can be 
        used in a SIP REGISTER request to provide push notification information from the 
        SIP User Agent (UA) to the SIP entity (realized as a SIP proxy in this document) 
        that will send a push request to the push server in order to trigger a push notification 
        towards the SIP UA.
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction" toc="default">
      <t>
        In order to save resources (e.g, battery life) some devices and operating
        systems require suspended Session Initiation Protocol (SIP) User Agents (UAs)
        <xref target="RFC3261"/> to be woken up using a push notification
        service. Typically each operating system uses a dedicated push notification
        service. For example, Apple iOS devices use the Apple Push Notification service (APNs).
      </t>
      <t>
        Due to the restriction above, applications can not be woken up by non-push notification
        traffic. This means that a suspended SIP UA will not be able to receive an incoming 
        SIP request (e.g., a SIP INVITE request), or to send periodic re-registration requests.
      </t>
      <t>
        This document describes how push notification mechanisms can be used to wake up
        suspended SIP UAs, in order to be able to receive and generate SIP requests.
        The document defines new SIP URI parameters, that can be used in a SIP REGISTER
        request to provide push notification information from the SIP UA to the SIP entity
        (realized as a SIP proxy in this document) that will send a push request to the 
        push server in order to trigger a push notification towards the SIP UA.
      </t> 
      <t>
        When a SIP UA registers to a Push Notification Service (PNS), it will receive a unique Push Resource ID (PRID)
        associated to that registration. The SIP UA will provide the PRID to the SIP network in
        a SIP REGISTER request. A SIP proxy (e.g., the SIP registrar) will store a mapping between
        the registered contact and the PRID.
      </t>
      <t>
        When the SIP proxy receives (or, in case the SIP proxy is also registrar, initiates) 
        a SIP request for a new session, or a stand-alone SIP request,
        addressed towards a SIP UA, or when the SIP proxy determines that the SIP UA needs to perform
        a re-registration, the SIP proxy will send a push request to the push notification
        service used by the SIP UA, using the push resource ID associated with the registered
        contact of the SIP UA, in order to trigger a push notification towards the SIP UA. The
        SIP proxy will then forward the SIP request towards the SIP UA using normal SIP routing
        procedures. Once the SIP UA receives the push notification, it will be to receive the 
        SIP request, and to generate a SIP request (e.g., a SIP REGISTER) itself.
      </t>
      <t>
        Different push notification mechanisms exist today. Some are based on there
        standardized mechanism defined in <xref target="RFC8030"/>, while others are
        proprietary (e.g., the Apple Push Notification service). <xref target="fig-sip-pn-arch"/>
        shows the generic push notification architecture supported by the mechanism
        in this document.
      </t>
      <figure title="SIP Push Notification Architecture" anchor="fig-sip-pn-arch"
align="center"><artwork>
<![CDATA[

    +--------+           +--------------+       +-----------------+
    | SIP UA |           | Push Service |       |    SIP Proxy    |
    +--------+           +--------------+       +-----------------+
        |                      |                         |
        |      Subscribe       |                         |
        |--------------------->|                         |
        |                      |                         |
        |    Push Resource ID  |                         |
        |<---------------------|                         |
        |                      |                         |        
        |          SIP REGISTER (Push Resource ID)       |
        |===============================================>|
        |                      |                         |
        |                      |     Push Message        |
        |                      |   (Push Resource ID)    |
        |    Push Message      |<------------------------|
        |  (Push Resource ID)  |                         |
        |<---------------------|                         |
        |                      |                         |

        ------- Push Notification API

        ======= SIP 

    REGISTER sip:alice@example.com SIP/2.0
    Via: SIP/2.0/TCP alicemobile.example.com:5060;branch=z9hG4bKnashds7
    Max-Forwards: 70
    To: Alice <sip:alice@example.com>
    From: Alice <sip:alice@example.com>;tag=456248
    Call-ID: 843817637684230@998sdasdh09
    CSeq: 1826 REGISTER
    Contact: <sip:alice@alicemobile.example.com;
      pn-provider=acme;
      pn-param=acme-param;
      pn-prid="ZTY4ZDJlMzODE1NmUgKi0K">
    Expires: 7200
    Content-Length: 0

]]></artwork></figure>
    </section>
 
    <section title="Conventions">
      <t>
        The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref target="RFC2119"></xref>.
      </t>
    </section>

    <section title="Push Resource ID (PRID)">
      <t>
        When an entity registers with a PNS it receives a unique Push Resource ID (PRID), 
        which is a value associated with the registration. 
      </t>
      <t>  
        The format of the PRID may vary depending on the PNS provider. The PRID 
        may be part of a URI that can be used to retrieve the address and port of
        the PNS when sending push requests to the PNS. The PRID may also be a token
        value, in which case the address and port of the PNS needs to be provided 
        using other means.
      </t>
      <t>
        The details regarding discovery of the PNS, and the procedures for the 
        push notification registration and maintenance are outside the scope of 
        this document. The information needed to contact the PNS is typically 
        pre-configured in the operating system (OS) of the device.
      </t>
    </section>

    <section anchor="section.ua" title="SIP User Agent (UA) Behavior">
      <t>
        Once the SIP UA has registered with the PNS and received the PRID, and when the 
        UA wants to receive push notifications triggered by the SIP proxy, the UA MUST 
        send a SIP REGISTER using normal SIP registration procedures. The UA MUST add 
        a pn-provider, a pn-prid and a pn-param (if required for the specific PNS provider) SIP URI parameter 
        to the SIP Contact header field URI of the request. The pn-provider URI parameter 
        contains the PNS provider, the pn-prid URI parameter contains the PRID value and 
        the pn-param URI parameter contains additional PNS-specific information.
      </t>
      <t>
        When the SIP UA receives a push notification, it MUST perform a SIP re-registration
        <xref target="RFC3261"/> by sending a SIP REGISTER request. If there are 
        Network Address Translators (NATs) between the SIP UA and the SIP proxy, the REGISTER
        request will create NAT bindings allowing incoming SIP requests to reach the UA. 
        If the SIP proxy triggered the push notification because it wants to forward a SIP request
        towards the UA, the receival of the REGISTER request can be used by the proxy
        as a trigger to forward the request.
      </t>
      <t>
        As long as the SIP UA wants the SIP proxy to continue sending push requests, the 
        UA MUST include a pn-provider, pn-prid and a pn-param (if required for the specific PNS provider) SIP URI parameter 
        in every re-registration SIP REGISTER request sent towards the proxy. Note that, in some cases, the
        PNS might update the PRID value, in which case the pn-prid URI parameter within the re-registration 
        REGISTER request will contain the new value.
      </t>
      <t>
        If the SIP UA at some point wants to stop the SIP proxy from sending push requests, 
        the UA MUST send a SIP REGISTER request without the URI parameters described above.
      </t>
      <t>
        If the SIP UA expects to receive payload in the push notification, the UA MAY 
        add a pn-enckey and a pn-encsec SIP Contact header field SIP URI parameter, in order to allow 
        encryption of the data using the mechanism in <xref target="RFC8291"/>.
        The pn-enckey URI parameter contains the public key, and the pn-encsec URI parameter 
        contains the authentication secret <xref target="RFC8291"/>.
      </t>
      <t>
        NOTE: End-to-end encryption of the payload between the SIP proxy and the SIP UA cannot
        be used if the push notification request payload contains information that needs to be
        accessible by the PNS provider.
       </t>
    </section>

    <section anchor="section.proxy" title="SIP Proxy Behavior">
      <section anchor="section.proxy.pnid" title="PNS Provider Information">
        <t>
          The PNS provider is retrieved from the pn-provider SIP URI parameter.
        </t>
        <t>
          The protocol and format used for the push request depends on the PNS provider,
          and the details for constructing and sending the messages are outside the scope of this
          specification.
        </t>
      </section>
      <section anchor="section.proxy.rereg" title="Trigger Periodic Re-registration">
        <t>
          If the SIP UA needs to perform periodic re-registrations, the proxy needs to have
          information about when those re-registrations are to be performed. The proxy
          either needs to contain the SIP registrar functionality, or the proxy needs to retrieve 
          the information from the registrar using some other mechanism.
        </t>
        <t>
          When the SIP proxy receives an indication that the SIP UA needs to perform a 
          re-registration, the proxy triggers a push request towards the push notification 
          server associated with the PRID.
        </t>
      </section>
      <section anchor="section.proxy.inv" title="SIP Request">
        <t>
          When the SIP proxy receives a SIP REGISTER request that contains a pn-provider SIP URI parameter value
          that the proxy does not support, or if the REGISTER request does not contain all
          information required for the specific PNS provider, the proxy MUST NOT forward the REGISTER request. 
          If the proxy is aware of another proxy that supports the PNS provider, the proxy MAY 
          redirect the SIP request (using a SIP 3xx response code) to that proxy. Otherwise the 
          proxy MUST send a SIP 501 (Not Implemented) response to the REGISTER request.
        </t>
        <t>
          When the SIP proxy receives (or, in case the proxy is the SIP registrar, creates) 
          a SIP request for a new dialog (e.g., a SIP INVITE request)
          or a non-dialog SIP request (e.g., a SIP MESSAGE request) aimed for a SIP UA, if the
          Request-URI of the request contains a pn-provider, a pn-prid and a pn-param 
          (if required for the specific PNS provider) SIP URI parameter, the proxy triggers a push request 
          towards the PNS associated with the PRID. After that, the proxy forwards the SIP request towards 
          the UA using normal SIP procedures.
        </t>
        <t>
          As the push notification will trigger the SIP UA to perform a re-registration, the
          SIP proxy can use the receival of the SIP REGISTER request as a trigger to forward
          SIP request towards the UA.
        </t>
        <t>
          The SIP proxy MUST NOT transport the SIP request as push request payload, instead of
          forwarding the request using normal SIP procedures.
        </t>
        <t>
          If the SIP proxy is not able to contact the push notification provider, or even retrieve
          the PNS provider, the proxy SHOULD reject the SIP request.
        </t>
        <t>
          If the SIP proxy is able to assume that the SIP UA is awake, and that the UA
          is able to receive the SIP request, the proxy MAY choose to not trigger a push
          notification request before trying to forward the SIP request towards the UA.
          The proxy can make such assumption e.g., if a TLS connection previously established
          by the UA is still open.
        </t>
      </section>
    </section>

    <section anchor="section.nat" title="Network Address Translator (NAT) Considerations">
      <t>
        Whenever the SIP UA receives a push notification, if the UA is located behind a
        Network Address Translator (NAT), the UA might need to take actions in order to 
        establish a binding in the NAT, in order for an incoming SIP request to reach the 
        UA. By performing the re-registration the UA will establish such NAT binding.
      </t>
    </section>

<section anchor="section.grammar" title="Grammar">
      <t>
        The section defines new SIP URI parameters, by extending the grammar for "uri-parameter" 
        as defined in <xref target="RFC3261"/>. The ABNF is as follows:
      </t>
        <figure align="center"><artwork>
<![CDATA[

  uri-parameter   =/ pn-provider / pn-param / pn-prid / pn-enccode / 
                     pn-enckey
  pn-provider     = "pn-provider" EQUAL pvalue
  pn-param        = "pn-param" EQUAL pvalue
  pn-prid         = "pn-prid" EQUAL pvalue
  pn-enccode      = "pn-enccode" EQUAL pvalue
  pn-enckey       = "pn-enckey" EQUAL pvalue

  ; pvalue as defined in RFC 3261
  ; EQUAL as defined in RFC 3261
  ; COLON as defined in RFC 3261
  
  The format and semantics of pns-param is specific to a given 
  pns-provider value.

]]></artwork></figure>
    </section>

    <section anchor="section.sec-reqs" title="PNS Registration Requirements">
        <t>
            When a new value is registered to the PNS Sub-registry, a reference to a specification which 
            describes the PNS associated with the value is provided. That specification MUST contain the following information:
            <list style="symbols">
            <t>
                The value of the pn-provider SIP URI parameter.
            </t>
            <t>
                How the pn-prid SIP URI parameter value is retrieved and set by the SIP UA.
            </t>
            <t>
                How the pn-param SIP URI parameter (if required for the specific PNS provider) value is retrieved and set by the SIP UA.
            </t>
            <t>
                Whether there are any restrictions regarding usage of payload encryption <xref target="RFC8291"/>
                with the associated PNS.
            </t>
          </list>
        </t>
    </section>
    
    <section anchor="section.sec-apns" title="pn-provider, pn-param and pn-prid URI parameters for Apple Push Notification service">
      <t>
        When the Apple Push Notification service (APNs) is used, the PNS-related SIP URI parameters are set as described below.
      </t>
      <t>
        The value of the pn-provider URI parameter is "apns". 
      </t>
      <t>
        Example: pn-provider = apns
      </t>
      <t>      
        The value of the pn-param URI parameter is the APNs App ID, which is encoded
        by two values, separated by a period (.): Team ID and Bundle ID. The Team ID is provided by Apple and 
        is unique to a development team. The Bundle ID is unique to a development team, and is a string that will
        can match a single application or a group of applications.
      </t>
      <t>
        Example: pn-param = DEF123GHIJ.com.yourcompany.yourexampleapp
      </t>
      <t>
        The value of the pn-prid URI parameter is the device token, which is a unique identifier assigned by Apple to a specific app 
        on a specific device.
      </t>
      <t>
        Example: pn-prid = 00fc13adff78512
      </t>
      <t>
        For more information on the APNs App ID:
      </t>
      <t>
        https://developer.apple.com/library/content/documentation/General/Conceptual/DevPedia-CocoaCore/AppID.html
      </t>
      <t>
        For more information on the APNs device token:
      </t>
      <t>
        https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/APNSOverview.html#//apple_ref/doc/uid/TP40008194-CH8-SW13
      </t>
    </section>

    <section anchor="section.sec-fcm" title="pn-provider, pn-param and pn-prid URI parameters for Google Firebase Cloud Messaging (FCM) push notification service">
      <t>
        When Firebase Cloud Messaging (FCM) is used, the PNS related URI parameters are set as described below.
      </t>
      <t>
        The value of the pn-provider URI parameter is "fcm". 
      </t>
      <t>
        The value of the pn-param URI parameter is the Sender ID.
      </t>
      <t>
        The value of the pn-prid URI parameter is the Registration token, which is 
        generated by the FCM SDK for each client app instance.
      </t>
      <t>
        For more information on the Sender ID and Registration token:
      </t>
      <t>
        https://firebase.google.com/docs/cloud-messaging/concept-options
      </t>
    </section>

    <section anchor="section.sec" title="Security considerations">
      <t>
        In addition to the information exchanged between a device and its
        PNS in order to establish a push notification subscription, the mechanism 
        in this document does not require entities to provide any additional
        information to the PNS.
      </t>
      <t>
        Push notification mechanisms provide different methods to ensure that malicious 
        user cannot trigger push notifications to a device. Users of the mechanism 
        in this document MUST take measures to prevent push notifications from being
        sent to a device from a malicious user.
      </t>
      <t>
        In case entities do want to include payload in the push notifications, this document 
        defines the means for using end-to-end payload encryption between the entity sending
        the push request and the entity receiving the associated push notification.
      </t>
    </section>
    <section anchor="section.iana" title="IANA considerations">
      <t>
        This specification defines new SIP URI parameters that extend the
        registry created by <xref target="RFC3969"/>:
      </t>
      <section anchor="section.iana.pn-provider" title="pn-provider">
        <figure align="center"><artwork>
<![CDATA[

  Parameter Name: pn-provider

  Predefined Values:  No

  Reference:  RFC XXXX

]]></artwork></figure>
      </section>
      <section anchor="section.iana.pn-param" title="pn-param">
        <figure align="center"><artwork>
<![CDATA[

  Parameter Name: pn-param

  Predefined Values:  No

  Reference:  RFC XXXX

]]></artwork></figure>
      </section>
      <section anchor="section.iana.pn-prid" title="pn-prid">
        <figure align="center"><artwork>
<![CDATA[

  Parameter Name: pn-prid

  Predefined Values:  No

  Reference:  RFC XXXX

]]></artwork></figure>
      </section>
      <section anchor="section.iana.pn-enckey" title="pn-enckey">
        <figure align="center"><artwork>
<![CDATA[

  Parameter Name: pn-enckey

  Predefined Values:  No

  Reference:  RFC XXXX

]]></artwork></figure>
      </section>
      <section anchor="section.iana.pn-encsec" title="pn-enccode">
        <figure align="center"><artwork>
<![CDATA[

  Parameter Name: pn-enccode

  Predefined Values:  No

  Reference:  RFC XXXX

]]></artwork></figure>
      </section>

      <section anchor="section.iana.pns-sub" title="PNS Sub-registry Establishment">
        <t>
             This section creates a new sub-registry, "PNS", under the sip-parameters
             registry: http://www.iana.org/assignments/sip-parameters.
        </t>
        <t>
            The purpose of the sub-registry is to register SIP URI pn-provider values.
        </t>
        <figure align="center"><artwork>
<![CDATA[

   This sub-registry is defined as a table that contains the following
   three columns:

   Value:        The token under registration

   Description:  The name of the Push Notification Service (PNS)

   Document:     A reference to the document defining the registration

]]></artwork></figure>

        <figure align="center"><artwork>
<![CDATA[

  This specification registers the following values:

  Value         Description                         Document
  -------       ----------------------------------  ----------

  apns          Apple Push Notification service     [RFC XXXX]
  fcm           Firebase Cloud Messaging            [RFC XXXX]
                 

]]></artwork></figure>
      </section>
    </section>
  </middle>
  <back>
    <references title="Normative references">
      <?rfc include="reference.RFC.2119"?>
      <?rfc include="reference.RFC.3261"?>
      <?rfc include="reference.RFC.3969"?>
      <?rfc include="reference.RFC.8030"?>
    </references>
    <references title="Informative references">
      <?rfc include="reference.RFC.8291"?>
    </references>
  </back>
</rfc>
